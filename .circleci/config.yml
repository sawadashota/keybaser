version: 2.1

executors:
  golang:
    docker:
      - image: circleci/golang:1.13
        environment:
          TEST_RESULTS: /tmp/test-results

commands:
  download:
    parameters:
      cache-key-prefix:
        description: go modules cache key prefix
        default: "go-modules"
        type: string
    steps:
      - restore_cache:
          name: Restore go modules cache
          keys:
            - << parameters.cache-key-prefix >>-{{ checksum "go.sum" }}
      - run:
          name: Install dependencies
          command: go mod download
      - run:
          name: Verify Modules
          command: go mod verify
      - save_cache:
          name: Save go modules cache
          key: << parameters.cache-key-prefix >>-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod/cache


jobs:
  test:
    executor: golang
    steps:
      - checkout
      - download:
          cache-key-prefix: "{{ .Environment.COMMON_CACHE_KEY }}-go-modules"
      - run:
          name: Install command line tools
          command: |
            go install github.com/jstemmer/go-junit-report
      - run:
          name: Run tests
          command: |
            mkdir -p ${TEST_RESULTS}
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            go test -coverprofile ${TEST_RESULTS}/coverage.txt -v ./... | tee ${TEST_RESULTS}/go-test.out
            go tool cover -html ${TEST_RESULTS}/coverage.txt -o ${TEST_RESULTS}/coverage.html
      - run:
          name: Send result codecov
          working_directory: jsonrpc
          command: |
            cp ${TEST_RESULTS}/coverage.txt .
            bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

workflows:
  test:
    jobs:
      - test
